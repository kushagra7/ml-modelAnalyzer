[{"/Users/kushagra/Projects/model-analyzer/src/index.js":"1","/Users/kushagra/Projects/model-analyzer/src/App.js":"2","/Users/kushagra/Projects/model-analyzer/src/components/homeComponent.js":"3","/Users/kushagra/Projects/model-analyzer/src/components/CsvReader.js":"4","/Users/kushagra/Projects/model-analyzer/src/components/HomeComponent.js":"5","/Users/kushagra/Projects/model-analyzer/src/data/textData.js":"6","/Users/kushagra/Projects/model-analyzer/src/components/PdfComponent.js":"7"},{"size":244,"mtime":1612174167046,"results":"8","hashOfConfig":"9"},{"size":2120,"mtime":1618595489808,"results":"10","hashOfConfig":"9"},{"size":2285,"mtime":1618460012244,"results":"11","hashOfConfig":"9"},{"size":2254,"mtime":1618535079791,"results":"12","hashOfConfig":"9"},{"size":3215,"mtime":1618534931007,"results":"13","hashOfConfig":"9"},{"size":11751,"mtime":1618544403186,"results":"14","hashOfConfig":"9"},{"size":553,"mtime":1618539635906,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"jumzh6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":5,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/kushagra/Projects/model-analyzer/src/index.js",[],["32","33"],"/Users/kushagra/Projects/model-analyzer/src/App.js",[],"/Users/kushagra/Projects/model-analyzer/src/components/homeComponent.js",["34","35","36","37","38","39","40","41","42","43","44","45","46"],"/Users/kushagra/Projects/model-analyzer/src/components/CsvReader.js",[],"/Users/kushagra/Projects/model-analyzer/src/components/HomeComponent.js",["47","48","49","50","51"],"import React, { useRef, useEffect, useState } from 'react'\nimport { Fragment } from 'react';\nimport '../styles/home.css';\nimport textData from '../data/textData.js';\n\n//components from 'react bootstrap'\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container';\nimport CsvReader from './CsvReader';\n\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as qna from \"@tensorflow-models/qna\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\n\n\nconst HomeComponent = () => {\n    const style = { position: \"fixed\", top: \"70%\", left: \"50%\", transform: \"translate(-50%, -50%)\" };\n\n    //setup references and state hooks\n    const passageRef = useRef(null);\n    const questionRef = useRef(null);\n    const [answer, setAnswer] = useState();\n    const [model, setModel] = useState(null);\n\n    //load model function\n    const loadModel = async () => {\n        const loadedModel = await qna.load()\n        setModel(loadedModel);\n        console.log(\"Model Loaded\");\n    }\n\n    //useEffect hook\n    useEffect(() => { loadModel() }, [])\n\n    //handle questions\n    const answerQuestion = async (e) => {\n        if (model != null) {\n            console.log(\"question submitted\");\n            //const passage = passageRef.current.value;\n\n            const passage = textData;\n            const question = questionRef.current.value;\n\n            const answers = await model.findAnswers(question, passage)\n            setAnswer(answers)\n            console.log(answers);\n        }\n    }\n\n    return (\n        <Fragment>\n            <Container>\n                <Row>\n                    <Col>\n                {model == null ?\n                        <div style={style}>\n                            <Loader\n                                type=\"ThreeDots\"\n                                color=\"#0275d8\"\n                                height={100}\n                                width={100}\n                            />\n                        </div>\n                        :\n                        <Fragment>\n                            <Jumbotron >\n                                <p>Ask Questions about iPhones</p>\n                                {/* <textarea ref={passageRef} rows=\"20\" cols={80}> </textarea> */}\n                                <input ref={questionRef} size=\"70\"></input>\n                                <br />\n                                <br />\n                                <Button variant=\"primary\" onClick={answerQuestion}>Predict</Button>{' '}\n                                <br /><br />\n                                <p>{answer ? answer.map((ans, idx) => <div><b>Prediction {idx + 1} - </b>{ans.text}</div>) : \"\"}</p>\n                            </Jumbotron>\n                        </Fragment>\n                    }\n                    </Col>\n                </Row>\n               \n            </Container>\n        </Fragment>\n    )\n}\n\n\nexport default HomeComponent;","/Users/kushagra/Projects/model-analyzer/src/data/textData.js",[],"/Users/kushagra/Projects/model-analyzer/src/components/PdfComponent.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":9,"column":8,"nodeType":"58","messageId":"59","endLine":9,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":15,"column":13,"nodeType":"58","messageId":"59","endLine":15,"endColumn":15},{"ruleId":"56","severity":1,"message":"61","line":18,"column":8,"nodeType":"58","messageId":"59","endLine":18,"endColumn":14},{"ruleId":"56","severity":1,"message":"62","line":26,"column":11,"nodeType":"58","messageId":"59","endLine":26,"endColumn":21},{"ruleId":"63","severity":2,"message":"64","line":26,"column":24,"nodeType":"58","endLine":26,"endColumn":30},{"ruleId":"56","severity":1,"message":"65","line":27,"column":11,"nodeType":"58","messageId":"59","endLine":27,"endColumn":22},{"ruleId":"63","severity":2,"message":"64","line":27,"column":25,"nodeType":"58","endLine":27,"endColumn":31},{"ruleId":"56","severity":1,"message":"66","line":28,"column":12,"nodeType":"58","messageId":"59","endLine":28,"endColumn":18},{"ruleId":"56","severity":1,"message":"67","line":28,"column":20,"nodeType":"58","messageId":"59","endLine":28,"endColumn":29},{"ruleId":"63","severity":2,"message":"68","line":28,"column":33,"nodeType":"58","endLine":28,"endColumn":41},{"ruleId":"56","severity":1,"message":"69","line":29,"column":12,"nodeType":"58","messageId":"59","endLine":29,"endColumn":17},{"ruleId":"63","severity":2,"message":"68","line":29,"column":30,"nodeType":"58","endLine":29,"endColumn":38},{"ruleId":"63","severity":2,"message":"70","line":39,"column":5,"nodeType":"58","endLine":39,"endColumn":14},{"ruleId":"56","severity":1,"message":"71","line":9,"column":8,"nodeType":"58","messageId":"59","endLine":9,"endColumn":19},{"ruleId":"56","severity":1,"message":"57","line":10,"column":8,"nodeType":"58","messageId":"59","endLine":10,"endColumn":12},{"ruleId":"56","severity":1,"message":"72","line":14,"column":8,"nodeType":"58","messageId":"59","endLine":14,"endColumn":17},{"ruleId":"56","severity":1,"message":"60","line":16,"column":13,"nodeType":"58","messageId":"59","endLine":16,"endColumn":15},{"ruleId":"56","severity":1,"message":"62","line":27,"column":11,"nodeType":"58","messageId":"59","endLine":27,"endColumn":21},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'tf' is defined but never used.","'Loader' is defined but never used.","'passageRef' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useRef\" is called in function \"homeComponent\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'questionRef' is assigned a value but never used.","'answer' is assigned a value but never used.","'setAnswer' is assigned a value but never used.","React Hook \"useState\" is called in function \"homeComponent\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'model' is assigned a value but never used.","React Hook \"useEffect\" is called in function \"homeComponent\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'ButtonGroup' is defined but never used.","'CsvReader' is defined but never used.","no-global-assign","no-unsafe-negation"]