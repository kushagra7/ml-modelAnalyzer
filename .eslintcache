[{"/Users/kushagra/Projects/model-analyzer/src/index.js":"1","/Users/kushagra/Projects/model-analyzer/src/App.js":"2","/Users/kushagra/Projects/model-analyzer/src/components/homeComponent.js":"3","/Users/kushagra/Projects/model-analyzer/src/components/CsvReader.js":"4","/Users/kushagra/Projects/model-analyzer/src/components/HomeComponent.js":"5"},{"size":244,"mtime":1612174167046,"results":"6","hashOfConfig":"7"},{"size":222,"mtime":1618465700020,"results":"8","hashOfConfig":"7"},{"size":2285,"mtime":1618460012244,"results":"9","hashOfConfig":"7"},{"size":2251,"mtime":1618458794250,"results":"10","hashOfConfig":"7"},{"size":4031,"mtime":1618465415273,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"jumzh6",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":5,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/kushagra/Projects/model-analyzer/src/index.js",[],["24","25"],"/Users/kushagra/Projects/model-analyzer/src/App.js",[],"/Users/kushagra/Projects/model-analyzer/src/components/homeComponent.js",["26","27","28","29","30","31","32","33","34","35","36","37","38"],"/Users/kushagra/Projects/model-analyzer/src/components/CsvReader.js",[],"/Users/kushagra/Projects/model-analyzer/src/components/HomeComponent.js",["39","40","41","42","43"],"import React, { useRef, useEffect, useState } from 'react'\nimport { Fragment } from 'react';\nimport '../styles/home.css';\n\n//components from 'react bootstrap'\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'\nimport Container from 'react-bootstrap/Container';\nimport CsvReader from './CsvReader';\n\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as qna from \"@tensorflow-models/qna\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\n\n\nconst HomeComponent = () => {\n\n    //setup references and state hooks\n    const passageRef = useRef(null);\n    const questionRef = useRef(null);\n    const [answer, setAnswer] = useState();\n    const [model, setModel] = useState(null);\n\n    //load model function\n    const loadModel = async () => {\n        const loadedModel = await qna.load()\n        setModel(loadedModel);\n        console.log(\"Model Loaded\");\n    }\n\n    //useEffect hook\n    useEffect(() => { loadModel() }, [])\n\n    //handle questions\n    const answerQuestion = async (e) => {\n        if (e.which === 13 && model != null) {\n            console.log(\"question submitted\");\n            const passage = passageRef.current.value;\n            const question = questionRef.current.value;\n\n            const answers = await model.findAnswers(question, passage)\n            setAnswer(answers)\n            console.log(answers);\n        }\n    }\n\n    return (\n        <Fragment>\n            <Container>\n                <Row>\n                    <Col sm={10}>{model == null ?\n                        <div>\n                            <div>Model Loading</div>\n                            <Loader\n                                type=\"Puff\"\n                                color=\"#00ffBB\"\n                                height={50}\n                                width={70}\n                            />\n                        </div>\n                        :\n                        <Fragment>\n                            <Jumbotron >\n                                <p id=\"head\">ML MODEL ANALYZER </p>\n                                <p>\n                                    Start by uploading a plain text model and press Analyze button.\n                         </p>\n                         Passage\n                        <textarea ref={passageRef} rows=\"30\" cols={100}> </textarea>\n                        <br/>\n                        Ask a Question \n                        <br/>\n                        <input ref={questionRef} onKeyPress={answerQuestion} size=\"80\"></input>\n                        <br/>Answers\n                        <br/>\n                        {answer ? answer.map((ans, idx) => <div><b>Answer{idx + 1} - </b>{ans.text}({ans.score})</div>) : \"\"}\n\n                            </Jumbotron>\n                        </Fragment>\n                    }\n\n                    </Col>\n                    {/* <Col sm={8}>\n                        <Jumbotron >\n                            <p id=\"head\">ML MODEL ANALYZER </p>\n                            <p>\n                                Start by uploading a plain text model and press Analyze button.\n                         </p>\n\n                            <ButtonGroup className=\"mb-2\">\n                                <Button variant=\"outline-primary\">Unencrypted Data</Button>\n                                <Button variant=\"outline-primary\">Encrypted Data</Button>\n                            </ButtonGroup>\n\n                            <p>\n                                <Button variant=\"primary\" size=\"lg\">Analyze</Button>\n                            </p>\n                        </Jumbotron>\n\n                    </Col> */}\n                </Row>\n                {/* <CsvReader /> */}\n            </Container>\n        </Fragment>\n    )\n}\n\n\nexport default HomeComponent;",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":9,"column":8,"nodeType":"50","messageId":"51","endLine":9,"endColumn":12},{"ruleId":"48","severity":1,"message":"52","line":15,"column":13,"nodeType":"50","messageId":"51","endLine":15,"endColumn":15},{"ruleId":"48","severity":1,"message":"53","line":18,"column":8,"nodeType":"50","messageId":"51","endLine":18,"endColumn":14},{"ruleId":"48","severity":1,"message":"54","line":26,"column":11,"nodeType":"50","messageId":"51","endLine":26,"endColumn":21},{"ruleId":"55","severity":2,"message":"56","line":26,"column":24,"nodeType":"50","endLine":26,"endColumn":30},{"ruleId":"48","severity":1,"message":"57","line":27,"column":11,"nodeType":"50","messageId":"51","endLine":27,"endColumn":22},{"ruleId":"55","severity":2,"message":"56","line":27,"column":25,"nodeType":"50","endLine":27,"endColumn":31},{"ruleId":"48","severity":1,"message":"58","line":28,"column":12,"nodeType":"50","messageId":"51","endLine":28,"endColumn":18},{"ruleId":"48","severity":1,"message":"59","line":28,"column":20,"nodeType":"50","messageId":"51","endLine":28,"endColumn":29},{"ruleId":"55","severity":2,"message":"60","line":28,"column":33,"nodeType":"50","endLine":28,"endColumn":41},{"ruleId":"48","severity":1,"message":"61","line":29,"column":12,"nodeType":"50","messageId":"51","endLine":29,"endColumn":17},{"ruleId":"55","severity":2,"message":"60","line":29,"column":30,"nodeType":"50","endLine":29,"endColumn":38},{"ruleId":"55","severity":2,"message":"62","line":39,"column":5,"nodeType":"50","endLine":39,"endColumn":14},{"ruleId":"48","severity":1,"message":"63","line":7,"column":8,"nodeType":"50","messageId":"51","endLine":7,"endColumn":14},{"ruleId":"48","severity":1,"message":"64","line":8,"column":8,"nodeType":"50","messageId":"51","endLine":8,"endColumn":19},{"ruleId":"48","severity":1,"message":"49","line":9,"column":8,"nodeType":"50","messageId":"51","endLine":9,"endColumn":12},{"ruleId":"48","severity":1,"message":"65","line":13,"column":8,"nodeType":"50","messageId":"51","endLine":13,"endColumn":17},{"ruleId":"48","severity":1,"message":"52","line":15,"column":13,"nodeType":"50","messageId":"51","endLine":15,"endColumn":15},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'tf' is defined but never used.","'Loader' is defined but never used.","'passageRef' is assigned a value but never used.","react-hooks/rules-of-hooks","React Hook \"useRef\" is called in function \"homeComponent\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'questionRef' is assigned a value but never used.","'answer' is assigned a value but never used.","'setAnswer' is assigned a value but never used.","React Hook \"useState\" is called in function \"homeComponent\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'model' is assigned a value but never used.","React Hook \"useEffect\" is called in function \"homeComponent\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","'Button' is defined but never used.","'ButtonGroup' is defined but never used.","'CsvReader' is defined but never used.","no-global-assign","no-unsafe-negation"]